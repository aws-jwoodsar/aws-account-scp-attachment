AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Metadata:
  AWS::ServerlessRepo::Application:
    Name: aws-account-scp-attachment
    Description: This serverless application... TODO
    Author: Jonathan Woods
    # SPDX License Id, e.g., MIT, MIT-0, Apache-2.0. See https://spdx.org/licenses for more details
    SpdxLicenseId: TODO
    LicenseUrl: LICENSE
    ReadmeUrl: README.md
    Labels: [serverless]
    HomePageUrl: https://github.com/aws-jwoodsar/aws-account-scp-attachment
    # Update the semantic version and run sam publish to publish a new version of your app
    SemanticVersion: 0.0.1
    # best practice is to use git tags for each release and link to the version tag as your source code URL
    SourceCodeUrl: https://github.com/aws-jwoodsar/aws-account-scp-attachment/tree/0.0.1

Parameters:
  LogLevel:
    Type: String
    Description: Log level for Lambda function logging, e.g., ERROR, INFO, DEBUG, etc
    Default: INFO
  ScpCount:
    Description: Number of SCPs to directly attach to new accounts
    Type: String
    Default: 1
    AllowedValues:
       - 1
       - 2
       - 3
       - 4
  ScpId1:
    Description: SCP for attaching to new account
    Type: String
    Default: p-xxxxxxx
  ScpId2:
    Description: SCP for attaching to new account
    Type: String
    Default: p-xxxxxxx
  ScpId3:
    Description: SCP for attaching to new account
    Type: String
    Default: p-xxxxxxx
  ScpId4:
    Description: SCP for attaching to new account
    Type: String
    Default: p-xxxxxxx
  OuId:
    Description: Organizational Unit for detecting new account (if not needed, leave blank)
    Type: String
    Default: ou-xxxx-xxxxxxx
  UseOuId:
    Description: true or false to activate the pOuId parameters
    Default: false
    Type: String
    AllowedValues: [true, false]

Conditions:
  ShouldUseOU:
    !Equals [true, !Ref UseOuId]
  TwoSCPs:
    !Equals [!Ref ScpCount , 2]
  ThreeSCPs:
    !Equals [!Ref ScpCount , 3]
  FourSCPs:
    !Equals [!Ref ScpCount , 4]


Globals:
  Function:
    Runtime: python3.8
    Tracing: Active
    Timeout: 60
    Environment:
      Variables:
        LOG_LEVEL: !Ref LogLevel

Resources:
  AccountSCPAttach:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: accountscpattach.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Timeout: 60
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          SCP_POLICY_COUNT: !Ref ScpCount
          DIRECT_ATTACH_SCP_POLICY_ID_1: !Ref ScpId1
          DIRECT_ATTACH_SCP_POLICY_ID_2: !If [TwoSCPs, !Ref ScpId2, !Ref "AWS::NoValue"]
          DIRECT_ATTACH_SCP_POLICY_ID_3: !If [ThreeSCPs, !Ref ScpId3, !Ref "AWS::NoValue"]
          DIRECT_ATTACH_SCP_POLICY_ID_4: !If [FourSCPs, !Ref ScpId4, !Ref "AWS::NoValue"]
          OU_ID : !If [ShouldUseOU, !Ref OuId, !Ref "AWS::NoValue"]


Outputs:
  AccountSCPAttachFunctionName:
    Description: "Lambda Function Name"
    Value: !Ref AccountSCPAttach
  AccountSCPAttachFunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt AccountSCPAttach.Arn